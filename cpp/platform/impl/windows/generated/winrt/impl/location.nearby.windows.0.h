// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_location_nearby_windows_0_H
#define WINRT_location_nearby_windows_0_H
WINRT_EXPORT namespace winrt::location::nearby::windows
{
    struct IBluetoothClassicMedium;
    struct BluetoothClassicMedium;
}
namespace winrt::impl
{
    template <> struct category<winrt::location::nearby::windows::IBluetoothClassicMedium>{ using type = interface_category; };
    template <> struct category<winrt::location::nearby::windows::BluetoothClassicMedium>{ using type = class_category; };
    template <> inline constexpr auto& name_v<winrt::location::nearby::windows::BluetoothClassicMedium> = L"location.nearby.windows.BluetoothClassicMedium";
    template <> inline constexpr auto& name_v<winrt::location::nearby::windows::IBluetoothClassicMedium> = L"location.nearby.windows.IBluetoothClassicMedium";
    template <> inline constexpr guid guid_v<winrt::location::nearby::windows::IBluetoothClassicMedium>{ 0x4F571DCA,0x9274,0x5AB4,{ 0x84,0x58,0x4A,0x94,0x69,0x24,0xDB,0xEE } }; // 4F571DCA-9274-5AB4-8458-4A946924DBEE
    template <> struct default_interface<winrt::location::nearby::windows::BluetoothClassicMedium>{ using type = winrt::location::nearby::windows::IBluetoothClassicMedium; };
    template <> struct abi<winrt::location::nearby::windows::IBluetoothClassicMedium>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
        };
    };
    template <typename D>
    struct consume_location_nearby_windows_IBluetoothClassicMedium
    {
    };
    template <> struct consume<winrt::location::nearby::windows::IBluetoothClassicMedium>
    {
        template <typename D> using type = consume_location_nearby_windows_IBluetoothClassicMedium<D>;
    };
}
#endif
