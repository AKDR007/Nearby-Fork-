// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_location_nearby_windows_H
#define WINRT_location_nearby_windows_H
#include "winrt/base.h"
static_assert(winrt::check_version(CPPWINRT_VERSION, "2.0.210505.3"), "Mismatched C++/WinRT headers.");
#define CPPWINRT_VERSION "2.0.210505.3"
#include "winrt/impl/location.nearby.windows.2.h"
namespace winrt::impl
{
    template <typename D>
    struct produce<D, winrt::location::nearby::windows::IBluetoothClassicMedium> : produce_base<D, winrt::location::nearby::windows::IBluetoothClassicMedium>
    {
    };
}
WINRT_EXPORT namespace winrt::location::nearby::windows
{
    inline BluetoothClassicMedium::BluetoothClassicMedium() :
        BluetoothClassicMedium(impl::call_factory_cast<BluetoothClassicMedium(*)(winrt::Windows::Foundation::IActivationFactory const&), BluetoothClassicMedium>([](winrt::Windows::Foundation::IActivationFactory const& f) { return f.template ActivateInstance<BluetoothClassicMedium>(); }))
    {
    }
}
namespace std
{
#ifndef WINRT_LEAN_AND_MEAN
    template<> struct hash<winrt::location::nearby::windows::IBluetoothClassicMedium> : winrt::impl::hash_base {};
    template<> struct hash<winrt::location::nearby::windows::BluetoothClassicMedium> : winrt::impl::hash_base {};
#endif
}
#endif
